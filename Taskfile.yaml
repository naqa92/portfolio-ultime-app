version: "3"

tasks:
  cluster-create:
    desc: Crée un kind cluster et déploie l'application
    cmds:
      - task: cluster-create-kind
      - task: wait-cluster-ready
      - task: load-docker-image
      - task: install-ingress-nginx
      - task: deploy-app
      - echo "Fin du Déploiement"

  cluster-create-kind:
    desc: Creates a kind cluster
    cmds:
      - cmd: kind create cluster --config kind.yaml
    internal: true

  wait-cluster-ready:
    desc: Attend que le cluster soit prêt
    cmds:
      - kubectl wait --for=condition=Ready nodes --all --timeout=120s
      - kubectl wait --for=condition=Ready pods -n kube-system -l k8s-app=kube-dns --timeout=120s
      - sleep 5
    internal: true

  load-docker-image:
    desc: Charge l'image Docker locale dans le cluster Kind
    cmds:
      - |
        IMAGE_NAME="ghcr.io/naqa92/todolist:${IMAGE_TAG:-latest}"
        echo "Loading Docker image: $IMAGE_NAME"
        kind load docker-image "$IMAGE_NAME"
        echo "Image loaded successfully into Kind cluster"
    internal: true

  install-ingress-nginx:
    desc: Installe le contrôleur d'ingress NGINX
    cmds:
      - helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
      - helm repo update
      - |
        helm install ingress-nginx ingress-nginx/ingress-nginx -n ingress-nginx --create-namespace \
          --set controller.hostPort.enabled=true \
          --set controller.hostPort.ports.http=80 \
          --set controller.hostPort.ports.https=443
      - kubectl -n ingress-nginx wait --for=condition=Available deployment/ingress-nginx-controller
    internal: true

  deploy-app:
    desc: Déploie l'application dans le cluster
    cmds:
      - kubectl create namespace demo
      - kubectl -n demo create secret generic db-app --from-literal=uri="${DATABASE_URL}"
      - helm upgrade --install todolist ./charts/todolist -n demo --set image.tag="${IMAGE_TAG}" --set image.pullPolicy=Never # use local image
      - kubectl -n demo wait --for=condition=Ready pod -l app.kubernetes.io/name=todolist --timeout=120s
      - kubectl -n demo get pods -l app.kubernetes.io/name=todolist
      - kubectl -n demo describe pods -l app.kubernetes.io/name=todolist
      - kubectl -n demo logs -l app.kubernetes.io/name=todolist --tail=100 --all-containers=true || true
      - kubectl -n demo describe deployment todolist || true
      - curl -sf http://todolist.127.0.0.1.nip.io/ || (echo "L'accès à todolist.127.0.0.1.nip.io a échoué" && exit 1)
    internal: true
